AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  TodoAPI - API Gateway and Lambda Functions Stack.

Parameters:
  ApiId:
    Type: String
    Description: The ID of the shared API Gateway
  TodoTableName:
    Type: String
    Description: The name of the DynamoDB table for Todos.

Globals:
  Function:
    Timeout: 10
    MemorySize: 256

Resources:
  CreateTodoFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: CreateTodoFunction
      CodeUri: ../../resources/functions/todos
      Handler: app.create_todo
      Runtime: python3.13
      Architectures:
        - x86_64
      Environment:
        Variables:
          TABLE_NAME:
            Ref: TodoTableName
      Policies:
        - DynamoDBCrudPolicy:
            TableName:
              Ref: TodoTableName

  CreateTodoPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        Fn::GetAtt:
          - CreateTodoFunction
          - Arn
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Sub: arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ApiId}/*/POST/todos

  GetTodosFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: GetTodosFunction
      CodeUri: ../../resources/functions/todos
      Handler: app.get_todos
      Runtime: python3.13
      Architectures:
        - x86_64
      Environment:
        Variables:
          TABLE_NAME:
            Ref: TodoTableName
      Policies:
        - DynamoDBCrudPolicy:
            TableName:
              Ref: TodoTableName

  GetTodosPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        Fn::GetAtt:
          - GetTodosFunction
          - Arn
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Sub: arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ApiId}/*/GET/todos

  GetTodoFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: GetTodoFunction
      CodeUri: ../../resources/functions/todos
      Handler: app.get_todo
      Runtime: python3.13
      Architectures:
        - x86_64
      Environment:
        Variables:
          TABLE_NAME:
            Ref: TodoTableName
      Policies:
        - DynamoDBCrudPolicy:
            TableName:
              Ref: TodoTableName

  GetTodoPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        Fn::GetAtt:
          - GetTodoFunction
          - Arn
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Sub: arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ApiId}/*/GET/todos/{todo_id}

  UpdateTodoFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: UpdateTodoFunction
      CodeUri: ../../resources/functions/todos
      Handler: app.update_todo
      Runtime: python3.13
      Architectures:
        - x86_64
      Environment:
        Variables:
          TABLE_NAME:
            Ref: TodoTableName
      Policies:
        - DynamoDBCrudPolicy:
            TableName:
              Ref: TodoTableName

  UpdateTodoPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        Fn::GetAtt:
          - UpdateTodoFunction
          - Arn
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Sub: arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ApiId}/*/PUT/todos/{todo_id}

  DeleteTodoFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: DeleteTodoFunction
      CodeUri: ../../resources/functions/todos
      Handler: app.delete_todo
      Runtime: python3.13
      Architectures:
        - x86_64
      Environment:
        Variables:
          TABLE_NAME:
            Ref: TodoTableName
      Policies:
        - DynamoDBCrudPolicy:
            TableName:
              Ref: TodoTableName

  DeleteTodoPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        Fn::GetAtt:
          - DeleteTodoFunction
          - Arn
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Sub: arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ApiId}/*/DELETE/todos/{todo_id}
